<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.upms.mapper.CourseMapper">
    <select id="findAll" resultType="com.upms.entity.Course">
        select c.*,t.name as teachName
        from course c, teacher t
        <where>
            c.teach_no = t.teachno
            <if test="courseNo != null and courseNo != ''">
                and course_no like '%' #{courseNo} '%'
            </if>
            <if test="name != null and name != ''">
                and name like '%' #{name} '%'
            </if>
            <if test="courseYear != null and courseYear != ''">
                and course_year like '%' #{courseYear} '%'
            </if>
            <if test="speciality != null and speciality != ''">
                and teach_no like '%' #{teachNo} '%'
            </if>
        </where>
        order by course_no limit #{start},#{pagesize}
    </select>

    <select id="getCount" resultType="Integer">
        select count(id) from course
        <where>
            <if test="courseNo != null and courseNo != ''">
                and course_no like '%' #{courseNo} '%'
            </if>
            <if test="name != null and name != ''">
                and name like '%' #{name} '%'
            </if>
            <if test="courseYear != null and courseYear != ''">
                and course_year like '%' #{courseYear} '%'
            </if>
            <if test="speciality != null and speciality != ''">
                and teach_no like '%' #{teachNo} '%'
            </if>
        </where>;
    </select>

    <insert id="addCourse">
        insert
        into course(course_no,name,course_hour,course_credit,course_year,semester,type,teach_no)
        values (#{courseNo},#{name},#{courseHour},#{courseCredit},#{courseYear},#{semester},#{type},#{teachNo})
    </insert>

    <update id="updateCourse" parameterType="java.util.Map">
        update course
        <trim prefix="set" suffixOverrides=",">
            <if test="name!=null">name=#{name},</if>
            <if test="courseHour!=null">course_hour=#{courseHour},</if>
            <if test="courseCredit!=null">course_credit=#{courseCredit},</if>
            <if test="courseYear!=null">course_year=#{courseYear},</if>
            <if test="semester!=null">semester=#{semester},</if>
            <if test="type!=null">type=#{type},</if>
            <if test="teachNo!=null">teach_no=#{teachNo},</if>
        </trim>
        WHERE course_no = #{courseNo}
    </update>

    <delete id="deleteCourse">
        delete from course where course_no in(#{courseNos})
    </delete>
    
    <update id="updateCoursePercent" parameterType="java.util.Map">
        <foreach collection="list" separator=";" item="cus">
            update course
            <trim prefix="set" suffixOverrides=",">
                <if test="cus.attendancePercent!=null">attendance_percent=#{cus.attendancePercent},</if>
                <if test="cus.workPercent!=null">work_percent=#{cus.workPercent},</if>
                <if test="cus.experimentPercent!=null">experiment_percent=#{cus.experimentPercent},</if>
                <if test="cus.otherPercent!=null">other_percent=#{cus.otherPercent},</if>
            </trim>
            WHERE course_no =#{cus.courseNo}
        </foreach>
    </update>

    <select id="queryCourseList" resultType="java.util.HashMap">
        select
        course_no as "value",
        name as "text"
        from course
    </select>

    <select id="getCourseByTaecher" resultType="com.upms.entity.Course">
        select c.*,t.name as teachName
        from course c, teacher t
        where c.teach_no = t.teachno
        and c.teach_no = #{teachNo}
    </select>

    <select id="getCourseByNum" resultType="com.upms.entity.Course">
        select * from course where course_no = #{courseNo}
    </select>
    <select id="getCourseByStuAndName" resultType="com.upms.entity.Course">
        select c.*,t.name as teachName
        from course c, teacher t
        <where>
            c.teach_no = t.teachno
            <if test="name != null and name != ''">
                and c.name like '%' #{name} '%'
            </if>
            <if test="type != null and type == '0'.toString()">
                and c.course_no not in (select s.course_no from stu_course s where s.stuno = #{stuno})
            </if>
            <if test="type != null and type == '1'.toString()">
                and c.course_no in (select s.course_no from stu_course s where s.stuno = #{stuno})
            </if>
        </where>
        order by course_no limit #{start},#{pagesize}
    </select>

    <select id="getCountStuCourse" resultType="java.lang.Integer">
        select count(id) from course
        <where>
            <if test="name != null and name != ''">
                and name like '%' #{name} '%'
            </if>
            <if test="type != null and type == '0'">
                and course_no not in (select s.course_no from stu_course s where s.stuno = #{stuno})
            </if>
            <if test="type != null and type == '1'">
                and course_no in (select s.course_no from stu_course s where s.stuno = #{stuno})
            </if>
        </where>;
    </select>
</mapper>